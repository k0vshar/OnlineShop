// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using OnlineShop.DB;

#nullable disable

namespace OnlineShop.DB.Migrations
{
    [DbContext(typeof(DatabaseContext))]
    [Migration("20250604001432_AddCategoryIdToProductSecond")]
    partial class AddCategoryIdToProductSecond
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.15")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("OnlineShop.DB.Models.Cart", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("UserId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.ToTable("Carts");
                });

            modelBuilder.Entity("OnlineShop.DB.Models.CartItem", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("CartId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("OrderDetailsId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("ProductId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("Quantity")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("CartId");

                    b.HasIndex("OrderDetailsId");

                    b.HasIndex("ProductId");

                    b.ToTable("CartItem");
                });

            modelBuilder.Entity("OnlineShop.DB.Models.Category", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Categories");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Name = "Корм"
                        },
                        new
                        {
                            Id = 2,
                            Name = "Игрушки"
                        },
                        new
                        {
                            Id = 3,
                            Name = "Миски и кормушки"
                        },
                        new
                        {
                            Id = 4,
                            Name = "Поводки и ошейники"
                        },
                        new
                        {
                            Id = 5,
                            Name = "Уход и гигиена"
                        });
                });

            modelBuilder.Entity("OnlineShop.DB.Models.Compare", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<Guid>("UserId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.ToTable("Compares");
                });

            modelBuilder.Entity("OnlineShop.DB.Models.Favourite", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<Guid>("UserId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.ToTable("Favourites");
                });

            modelBuilder.Entity("OnlineShop.DB.Models.Image", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("ProductId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("URL")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("ProductId");

                    b.ToTable("Images");

                    b.HasData(
                        new
                        {
                            Id = new Guid("2f33830e-c282-406c-9484-131dc36caa5c"),
                            ProductId = new Guid("168defec-16fe-4dec-8db1-8d968036bd89"),
                            URL = "/img/products/notebook_MSI_Katana_17_B12VEK-482XRU_1.jpg"
                        },
                        new
                        {
                            Id = new Guid("d1f639d8-ee07-4a1c-92a6-37b9b85f261d"),
                            ProductId = new Guid("168defec-16fe-4dec-8db1-8d968036bd89"),
                            URL = "/img/products/notebook_MSI_Katana_17_B12VEK-482XRU_2.jpg"
                        },
                        new
                        {
                            Id = new Guid("cec15667-ebba-40a6-8f00-6b82825ae2df"),
                            ProductId = new Guid("06fe75f0-09f2-4489-8d11-42f6c816baef"),
                            URL = "/img/products/tv_Samsung_QE43Q60BAU_1.jpg"
                        },
                        new
                        {
                            Id = new Guid("d8052407-64bc-4543-b1ba-7da5fac09516"),
                            ProductId = new Guid("06fe75f0-09f2-4489-8d11-42f6c816baef"),
                            URL = "/img/products/tv_Samsung_QE43Q60BAU_2.jpg"
                        },
                        new
                        {
                            Id = new Guid("34712b35-335b-4863-a109-0bfb0c612938"),
                            ProductId = new Guid("d3765151-d68f-41ea-a8b9-27bae6f2b8a0"),
                            URL = "/img/products/Refrigerator_Midea_MDRB499FGF01IM_1.jpg"
                        },
                        new
                        {
                            Id = new Guid("c841fc87-3d4c-47be-ae15-fce88542d3c3"),
                            ProductId = new Guid("d3765151-d68f-41ea-a8b9-27bae6f2b8a0"),
                            URL = "/img/products/Refrigerator_Midea_MDRB499FGF01IM_2.jpg"
                        },
                        new
                        {
                            Id = new Guid("e469883a-82d5-4b1e-9538-fe6d05dd1360"),
                            ProductId = new Guid("1f06e50b-989b-4827-89db-4859d1d49998"),
                            URL = "/img/products/Robot_Vacuum_Cleaner_Dreame_Bot_Robot_Vacuum_and_Mop_F9_Pro_1.jpg"
                        },
                        new
                        {
                            Id = new Guid("683efc32-0514-44a8-bda8-eb3ea45e3f42"),
                            ProductId = new Guid("1f06e50b-989b-4827-89db-4859d1d49998"),
                            URL = "/img/products/Robot_Vacuum_Cleaner_Dreame_Bot_Robot_Vacuum_and_Mop_F9_Pro_2.jpg"
                        },
                        new
                        {
                            Id = new Guid("91db92bb-3e37-4219-9fcc-62b3d670a15c"),
                            ProductId = new Guid("2c9d0079-8bdd-43bb-beba-bcde5a43d6c7"),
                            URL = "/img/products/Electric_oven_Gorenje_BO6737E02X_1.jpg"
                        },
                        new
                        {
                            Id = new Guid("b2681e3d-da09-41e5-8df0-9867bc47e4f2"),
                            ProductId = new Guid("2c9d0079-8bdd-43bb-beba-bcde5a43d6c7"),
                            URL = "/img/products/Electric_oven_Gorenje_BO6737E02X_2.jpg"
                        },
                        new
                        {
                            Id = new Guid("cf1b1834-bdb7-4fbe-82a2-4dd06d635640"),
                            ProductId = new Guid("6f74b568-cf38-4caa-92c3-dbc45437a2aa"),
                            URL = "/img/products/Air_conditioner_Haier_HSU7HRM3_1.jpg"
                        },
                        new
                        {
                            Id = new Guid("67dea053-c686-41a5-9e37-bf33ae82bada"),
                            ProductId = new Guid("6f74b568-cf38-4caa-92c3-dbc45437a2aa"),
                            URL = "/img/products/Air_conditioner_Haier_HSU7HRM3_2.jpg"
                        },
                        new
                        {
                            Id = new Guid("b6596218-042a-48b7-a62e-38ce8ed7ddd0"),
                            ProductId = new Guid("2842320a-f42d-4f81-880f-488778526f5d"),
                            URL = "/img/products/Freezer_Haier_HF-82WAA_1.jpg"
                        },
                        new
                        {
                            Id = new Guid("a9ccb1f9-56e1-46f5-80f2-5391b9422750"),
                            ProductId = new Guid("2842320a-f42d-4f81-880f-488778526f5d"),
                            URL = "/img/products/Freezer_Haier_HF-82WAA_2.jpg"
                        },
                        new
                        {
                            Id = new Guid("f5de0b00-1a25-4602-923d-661df4acc2f7"),
                            ProductId = new Guid("7f15a38b-fcb6-4241-87e8-8148e148e5b4"),
                            URL = "/img/products/Built-in_electric_panel_Gorenje_ECT641BX_1.jpg"
                        },
                        new
                        {
                            Id = new Guid("b5c66945-d510-49d7-811d-0383d46fdab8"),
                            ProductId = new Guid("7f15a38b-fcb6-4241-87e8-8148e148e5b4"),
                            URL = "/img/products/Built-in_electric_panel_Gorenje_ECT641BX_2.jpg"
                        });
                });

            modelBuilder.Entity("OnlineShop.DB.Models.Order", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedTime")
                        .HasColumnType("datetime2");

                    b.Property<int>("OrderStatus")
                        .HasColumnType("int");

                    b.Property<Guid>("UserId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.ToTable("Orders");
                });

            modelBuilder.Entity("OnlineShop.DB.Models.OrderDetails", b =>
                {
                    b.Property<Guid>("Id")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Address")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Comment")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Delivery")
                        .HasColumnType("int");

                    b.Property<DateTime>("DeliveryDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Email")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Pay")
                        .HasColumnType("int");

                    b.Property<string>("Phone")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("OrderDetails");
                });

            modelBuilder.Entity("OnlineShop.DB.Models.Product", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("CategoryId")
                        .HasColumnType("int");

                    b.Property<int?>("CompareId")
                        .HasColumnType("int");

                    b.Property<decimal>("Cost")
                        .HasColumnType("decimal(18, 2)");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("FavouriteId")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("CategoryId");

                    b.HasIndex("CompareId");

                    b.HasIndex("FavouriteId");

                    b.ToTable("Products");

                    b.HasData(
                        new
                        {
                            Id = new Guid("168defec-16fe-4dec-8db1-8d968036bd89"),
                            CategoryId = 4,
                            Cost = 550m,
                            Description = "Лінійка New Classic — перевірена часом серія повідців-рулеток для приємних прогулянок із вихованцем. Рулетки Flexi New Classic S характеризуються надійністю та зручністю.",
                            Name = "Рулетка Flexi New Classic S 5м Синяя"
                        },
                        new
                        {
                            Id = new Guid("06fe75f0-09f2-4489-8d11-42f6c816baef"),
                            CategoryId = 1,
                            Cost = 1680m,
                            Description = "Сухий раціон містить м’ясні інгредієнти на першому місці у Складі, збалансоване поєднання білків та жирів 24/13 та чудово смакує собакам середніх порід вагою від 11 до 25 кг і віком від 1 року.",
                            Name = "Сухий корм для дорослих собак Club 4 Paws (Клуб 4 Лапи) Преміум для середніх порід 14 кг"
                        },
                        new
                        {
                            Id = new Guid("d3765151-d68f-41ea-a8b9-27bae6f2b8a0"),
                            CategoryId = 2,
                            Cost = 178m,
                            Description = "Свійські тварини незмінно залишаються в центрі уваги компанії Trixie вже понад 40 років. Цікавість і любов до свійських тварин і їхніх власників допомагають компанії безперервно розвиватися. Широкий діапазон продуктів компанії експортується до понад 60 країн.",
                            Name = "М'яч бейсбольний Denta Fun Mintfresh Trixie 3289 7 см"
                        },
                        new
                        {
                            Id = new Guid("1f06e50b-989b-4827-89db-4859d1d49998"),
                            CategoryId = 3,
                            Cost = 1235m,
                            Description = "Не завжди встигаєте чи забуваєте нагодувати та напоїти свого домашнього улюбленця? Тоді цей комплект поїлки та годівниці саме те, що вам потрібно. Він подбає про те, щоб ваш вихованець завжди отримав свіжу порцію корму та питної води.",
                            Name = "Годівниця та поїлка для котів та собак Hoopet 2 x 3.5L, комплект Сірий"
                        },
                        new
                        {
                            Id = new Guid("2c9d0079-8bdd-43bb-beba-bcde5a43d6c7"),
                            CategoryId = 5,
                            Cost = 368m,
                            Description = "Шампунь Trixie з оліями макадамії й обліпихи для собак — прекрасний варіант для купання тварин, чия шерсть потребує додаткового підживлення корисними речовинами.",
                            Name = "Шампунь Trixie 2910 з маслами макадамії і обліпихи 1л"
                        });
                });

            modelBuilder.Entity("OnlineShop.DB.Models.CartItem", b =>
                {
                    b.HasOne("OnlineShop.DB.Models.Cart", null)
                        .WithMany("Items")
                        .HasForeignKey("CartId");

                    b.HasOne("OnlineShop.DB.Models.OrderDetails", null)
                        .WithMany("Items")
                        .HasForeignKey("OrderDetailsId");

                    b.HasOne("OnlineShop.DB.Models.Product", "Product")
                        .WithMany()
                        .HasForeignKey("ProductId");

                    b.Navigation("Product");
                });

            modelBuilder.Entity("OnlineShop.DB.Models.Image", b =>
                {
                    b.HasOne("OnlineShop.DB.Models.Product", null)
                        .WithMany("ImagesPath")
                        .HasForeignKey("ProductId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("OnlineShop.DB.Models.OrderDetails", b =>
                {
                    b.HasOne("OnlineShop.DB.Models.Order", null)
                        .WithOne("OrderDetails")
                        .HasForeignKey("OnlineShop.DB.Models.OrderDetails", "Id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("OnlineShop.DB.Models.Product", b =>
                {
                    b.HasOne("OnlineShop.DB.Models.Category", "Category")
                        .WithMany("Products")
                        .HasForeignKey("CategoryId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("OnlineShop.DB.Models.Compare", null)
                        .WithMany("Products")
                        .HasForeignKey("CompareId");

                    b.HasOne("OnlineShop.DB.Models.Favourite", null)
                        .WithMany("Products")
                        .HasForeignKey("FavouriteId");

                    b.Navigation("Category");
                });

            modelBuilder.Entity("OnlineShop.DB.Models.Cart", b =>
                {
                    b.Navigation("Items");
                });

            modelBuilder.Entity("OnlineShop.DB.Models.Category", b =>
                {
                    b.Navigation("Products");
                });

            modelBuilder.Entity("OnlineShop.DB.Models.Compare", b =>
                {
                    b.Navigation("Products");
                });

            modelBuilder.Entity("OnlineShop.DB.Models.Favourite", b =>
                {
                    b.Navigation("Products");
                });

            modelBuilder.Entity("OnlineShop.DB.Models.Order", b =>
                {
                    b.Navigation("OrderDetails");
                });

            modelBuilder.Entity("OnlineShop.DB.Models.OrderDetails", b =>
                {
                    b.Navigation("Items");
                });

            modelBuilder.Entity("OnlineShop.DB.Models.Product", b =>
                {
                    b.Navigation("ImagesPath");
                });
#pragma warning restore 612, 618
        }
    }
}
